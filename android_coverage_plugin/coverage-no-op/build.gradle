plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

repositories {
    google()
    mavenCentral()
    maven { url "https://maven.aliyun.com/repository/jcenter" }
    maven { url "https://maven.aliyun.com/repository/public" }
}

version = "1.0.0"
group = 'com.duqian.coverage'
//apply from: rootProject.file('scripts/publish_jar.gradle')
afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = group
                artifactId = 'coverage-no-op'
                version = "$coverageVersionBuild"

                from components.all
            }
        }
        repositories {
            maven {
                url = uri('../repo')
                //url = layout.buildDirectory.dir('repo')
                url = getLocalConfig("RELEASE_URL", "")//System.getenv("MAVEN_REPO_URL")
                println("repo url=$url")
                allowInsecureProtocol = true
                credentials {
                    username getLocalConfig("MAVEN_USERNAME", "develop-snapshot")//'develop-snapshot'
                    password getLocalConfig("MAVEN_PASSWORD", "")//"${System.getenv("MAVEN_REPO_PWD")}"
                }
            }
        }
    }
}

Object getLocalConfig(String key, Object defaultValue) {
    try {
        Properties properties = new Properties()
        File file = project.rootProject.file('local.properties')
        if (file == null || file.length() <= 0) return defaultValue
        properties.load(file.newDataInputStream())
        def switchStatus = properties.getProperty(key)
        return switchStatus
    } catch (Exception e) {
        print("getLocalConfig error = $e")
    }
    return defaultValue
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
}
